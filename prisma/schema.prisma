generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Service {
  service_id    Int        @id @default(autoincrement())
  service_name  String
  service_desc  String
  service_image String
  service_type  String
  categories    Category[]
}

model Category {
  category_id    Int     @id @default(autoincrement())
  type_Of_Repair String
  raw            Float
  tax            Float
  shipping       Float
  timeFrame      String
  service_id     Int
  labour         Int     @default(100)
  service        Service @relation(fields: [service_id], references: [service_id])

  @@index([service_id], map: "Category_service_id_fkey")
}

model Brand {
  brand_id    Int      @id @default(autoincrement())
  brand_name  String
  brand_image String
  brand_desc  String
  series      Series[]
}

model Products {
  product_id          Int               @id @default(autoincrement())
  product_name        String
  product_image       String
  product_desc        String
  raw                 Float
  tax                 Float
  shipping            Float
  markup              Float
  product_category_id Int
  ProductCategories   ProductCategories @relation(fields: [product_category_id], references: [product_category_id])

  @@index([product_category_id], map: "idx_product_category_id")
}

model Series {
  series_id    Int     @id @default(autoincrement())
  series_name  String
  series_image String
  series_desc  String
  brand_id     Int
  model        Model[]
  brand        Brand   @relation(fields: [brand_id], references: [brand_id])

  @@index([brand_id], map: "Series_brand_id_fkey")
}

model Model {
  model_id       Int             @id @default(autoincrement())
  model_name     String
  model_image    String
  series_id      Int
  series         Series          @relation(fields: [series_id], references: [series_id])
  modelCategorys ModelCategory[]

  @@index([series_id], map: "Model_series_id_fkey")
}

model ModelCategory {
  modelCategory_id Int    @id @default(autoincrement())
  type_of_repair   String
  raw              Float
  tax              Float
  shipping         Float
  timeFrame        String
  model_id         Int
  labour           Int    @default(100)
  model            Model  @relation(fields: [model_id], references: [model_id])

  @@index([model_id], map: "ModelCategory_model_id_fkey")
}

model Staff {
  staff_id      Int    @id @default(autoincrement())
  staff_name    String
  mobile_number String
  email         String @unique
  location      String
  role          String @default("admin")
  password      String @db.VarChar(255)
}

model InventoryItem {
  inventoryItemId    Int                @id @default(autoincrement())
  name               String
  description        String?
  sku                String
  stock              Int
  itemsCategoryId    Int
  itemsSubCategoryId Int?
  vendorId           Int?
  locationId         Int?
  rawCost            Float              @default(0)
  shippingCost       Float              @default(10)
  taxRate            Float              @default(10.25)
  internalTransfers  InternalTransfer[]
  inventoryAge       InventoryAge[]
  itemsCategory      ItemsCategory      @relation(fields: [itemsCategoryId], references: [itemsCategoryId])
  itemsSubCategory   ItemsSubCategory?  @relation(fields: [itemsSubCategoryId], references: [itemsSubCategoryId])
  location           Location?          @relation(fields: [locationId], references: [locationId])
  vendor             Vendor?            @relation(fields: [vendorId], references: [vendorId])
  lowStockAlerts     LowStockAlert[]
  sales              Sale[]
  stockReturns       StockReturn[]
  variations         Variation[]

  @@index([itemsCategoryId], map: "InventoryItem_itemsCategoryId_fkey")
  @@index([itemsSubCategoryId], map: "InventoryItem_itemsSubCategoryId_fkey")
  @@index([locationId], map: "InventoryItem_locationId_fkey")
  @@index([vendorId], map: "InventoryItem_vendorId_fkey")
}

model ItemsCategory {
  itemsCategoryId Int                @id @default(autoincrement())
  name            String
  items           InventoryItem[]
  subCategories   ItemsSubCategory[]
}

model ItemsSubCategory {
  itemsSubCategoryId Int             @id @default(autoincrement())
  name               String
  categoryId         Int
  items              InventoryItem[]
  category           ItemsCategory   @relation(fields: [categoryId], references: [itemsCategoryId])

  @@index([categoryId], map: "ItemsSubCategory_categoryId_fkey")
}

model Vendor {
  vendorId Int             @id @default(autoincrement())
  name     String
  items    InventoryItem[]
}

model Location {
  locationId    Int                @id @default(autoincrement())
  name          String
  description   String?
  transfersFrom InternalTransfer[] @relation("fromLocation")
  transfersTo   InternalTransfer[] @relation("toLocation")
  items         InventoryItem[]
}

model Variation {
  variationId     Int           @id @default(autoincrement())
  sku             String        @unique
  inventoryItemId Int
  inventoryItem   InventoryItem @relation(fields: [inventoryItemId], references: [inventoryItemId])

  @@index([inventoryItemId], map: "Variation_inventoryItemId_fkey")
}

model StockReturn {
  stockReturnId   Int           @id @default(autoincrement())
  inventoryItemId Int
  quantity        Int
  reason          String
  returnedAt      DateTime
  inventoryItem   InventoryItem @relation(fields: [inventoryItemId], references: [inventoryItemId])

  @@index([inventoryItemId], map: "StockReturn_inventoryItemId_fkey")
}

model InternalTransfer {
  internalTransferId Int           @id @default(autoincrement())
  inventoryItemId    Int
  quantity           Int
  fromLocationId     Int
  toLocationId       Int
  fromLocation       Location      @relation("fromLocation", fields: [fromLocationId], references: [locationId])
  inventoryItem      InventoryItem @relation(fields: [inventoryItemId], references: [inventoryItemId])
  toLocation         Location      @relation("toLocation", fields: [toLocationId], references: [locationId])

  @@index([fromLocationId], map: "InternalTransfer_fromLocationId_fkey")
  @@index([inventoryItemId], map: "InternalTransfer_inventoryItemId_fkey")
  @@index([toLocationId], map: "InternalTransfer_toLocationId_fkey")
}

model Sale {
  saleId          Int           @id @default(autoincrement())
  inventoryItemId Int
  quantity        Int
  revenue         Float
  saleDate        DateTime
  inventoryItem   InventoryItem @relation(fields: [inventoryItemId], references: [inventoryItemId])

  @@index([inventoryItemId], map: "Sale_inventoryItemId_fkey")
}

model InventoryAge {
  inventoryAgeId  Int           @id @default(autoincrement())
  inventoryItemId Int
  arrivalDate     DateTime
  inventoryItem   InventoryItem @relation(fields: [inventoryItemId], references: [inventoryItemId])

  @@index([inventoryItemId], map: "InventoryAge_inventoryItemId_fkey")
}

model LowStockAlert {
  lowStockAlertId Int           @id @default(autoincrement())
  inventoryItemId Int
  threshold       Int
  inventoryItem   InventoryItem @relation(fields: [inventoryItemId], references: [inventoryItemId])

  @@index([inventoryItemId], map: "LowStockAlert_inventoryItemId_fkey")
}

model ProductCategories {
  product_category_id    Int        @id @default(autoincrement())
  product_category_name  String
  product_category_desc  String
  product_category_image String
  Products               Products[]
}
